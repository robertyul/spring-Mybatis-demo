<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		   http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">
           
    <!--对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.persistence.*" />

	<!--
	设置data source
  	<bean id="mysqlDataSource" class="xxxxx" init-method="init" destroy-method="close"></bean>
  	设置多个数据源
   	<bean id="multipleDataSource" class="dataSourceSelect.MultipleDataSource">
        <property name="defaultTargetDataSource" ref="mysqlDataSource"/>
        <property name="targetDataSources">
            <map>
                <entry key="mysqlDataSource" value-ref="mysqlDataSource"/>
                <entry key="realTimeStatisticsDataSource" value-ref="realTimeStatisticsDataSource"/>
            </map>
        </property>
    </bean>
	设置不同数据源对应的接口
	<bean id="multipleDataSourceAspectAdvice" class="xxxxxx.dataSourceSelect.MultipleDataSourceAspectAdvice"></bean>
    <aop:config>
		<aop:pointcut expression="execution(* xxxxx.*(..))" id="pt"/>
		<aop:aspect ref="multipleDataSourceAspectAdvice">
			<aop:around method="selectDataSource" pointcut-ref="pt"/>
		</aop:aspect>
	</aop:config>
    <bean id="TransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
         <property name="dataSource" ref="multipleDataSource"/>
    </bean>
    -->
	<bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="driverClass" value="${bonecp.oracle.driverClass}" />
        <property name="jdbcUrl" value="${bonecp.oracle.jdbcUrl}" />
        <property name="username" value="${bonecp.oracle.user}"/>
        <property name="password" value="${bonecp.oracle.password}"/>
        <property name="idleMaxAgeInMinutes" value="${bonecp.idleMaxAgeInMinutes}"/>
        <property name="partitionCount" value="${bonecp.partitionCount}"/>
        <property name="acquireIncrement" value="${bonecp.acquireIncrement}"/>
        <property name="statementsCacheSize" value="${bonecp.statementsCacheSize}"/>
        <property name="releaseHelperThreads" value="${bonecp.releaseHelperThreads}"/>
        <property name="idleConnectionTestPeriodInMinutes" value="${bonecp.idleConnectionTestPeriodInMinutes}"/>
        <property name="maxConnectionsPerPartition" value="${bonecp.maxConnectionsPerPartition}"/>
        <property name="minConnectionsPerPartition" value="${bonecp.minConnectionsPerPartition}"/>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="configLocation">
			<value>classpath:/mybatis-config.xml</value>
		</property>
		<property name="mapperLocations"> 
			<list>
				<value>classpath:/mybatis/demo/*.xml</value>
			</list>
		</property>
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.persistence.dao" />
	</bean>
	<!--
	<tx:annotation-driven transaction-manager="TransactionManager"/>
    <task:annotation-driven executor="executor" scheduler="scheduler"/>
	<task:executor id="executor" pool-size="5" />  
    <task:scheduler id="scheduler" pool-size="10" />
    -->

</beans>

